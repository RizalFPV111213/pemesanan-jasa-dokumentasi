

git add .

git commit -m "gua ubah AP"

git push


=======================

git push --set-upstream origin Audyari


======================

perancangan sistem Aplikasi pemesanan jasa 
fotografi videografi dan company profile perusahaan


======================

1. jalankan XAMPP
2. run mySQL
3. masuk ke shell
4. mysql -u root




setup database : 

CREATE DATABASE PhotographyService;

USE PhotographyService;

-- Tabel untuk User
CREATE TABLE Users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    phone_number VARCHAR(15),
    role ENUM('customer', 'admin') DEFAULT 'customer'
);

-- Tabel untuk Service
CREATE TABLE Services (
    service_id INT AUTO_INCREMENT PRIMARY KEY,
    service_name VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    duration INT NOT NULL -- Durasi dalam menit
);

-- Tabel untuk Booking
CREATE TABLE Bookings (
    booking_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    service_id INT,
    booking_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    event_date DATETIME NOT NULL,
    status ENUM('pending', 'confirmed', 'completed', 'canceled') DEFAULT 'pending',
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (service_id) REFERENCES Services(service_id)
);

-- Tabel untuk Payment
CREATE TABLE Payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    payment_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    payment_method ENUM('credit_card', 'bank_transfer') NOT NULL,
    status ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
    FOREIGN KEY (booking_id) REFERENCES Bookings(booking_id)
);

-- Tabel untuk Company Profile
CREATE TABLE CompanyProfiles (
    company_id INT AUTO_INCREMENT PRIMARY KEY,
    company_name VARCHAR(100) NOT NULL,
    description TEXT,
    address VARCHAR(255),
    contact_number VARCHAR(15),
    website VARCHAR(100)
);

-- Tabel untuk Review
CREATE TABLE Reviews (
    review_id INT AUTO_INCREMENT PRIMARY KEY,
    booking_id INT,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comments TEXT,
    review_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (booking_id) REFERENCES Bookings(booking_id)
);

-- Tabel untuk Notifications
CREATE TABLE Notifications (
    notification_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    message TEXT NOT NULL,
    date_sent DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_read BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

===============================


1. Pendaftaran dan Autentikasi Pengguna

Registrasi Pengguna: Pengguna baru harus dapat mendaftar dengan email, nama, dan password.
Login: Pengguna harus dapat masuk menggunakan email dan password.
Reset Password: Fitur untuk mengatur ulang password jika pengguna lupa.

2. Manajemen Layanan

Menambahkan Layanan: Admin dapat menambahkan layanan baru ke dalam sistem.
Mengedit Layanan: Admin dapat memperbarui informasi tentang layanan yang ada.
Menghapus Layanan: Admin dapat menghapus layanan yang tidak lagi ditawarkan.

3. Proses Pemesanan

Membuat Pemesanan: Pengguna dapat memilih layanan, tanggal acara, dan membuat pemesanan.
Validasi Pemesanan: Memastikan bahwa layanan tersedia pada tanggal yang diminta.
Status Pemesanan: Mengelola status pemesanan (pending, confirmed, completed, canceled).

4. Pembayaran

Inisiasi Pembayaran: Setelah pemesanan dikonfirmasi, pengguna dapat melakukan pembayaran.
Validasi Pembayaran: Memastikan pembayaran berhasil sebelum mengubah status pemesanan.
Mencatat Pembayaran: Simpan informasi pembayaran di database.

5. Ulasan dan Penilaian

Menambah Ulasan: Pengguna dapat memberikan ulasan setelah penyelesaian pemesanan.
Mengedit Ulasan: Pengguna dapat memperbarui atau menghapus ulasan yang telah dibuat.

6. Notifikasi

Notifikasi Pemesanan: Kirim notifikasi kepada pengguna untuk konfirmasi pemesanan dan status.
Notifikasi Pembayaran: Kirim notifikasi setelah pembayaran berhasil atau gagal.
Notifikasi Ulasan: Informasikan kepada pengguna jika ulasan diterima atau ditolak.

7. Manajemen Profil Perusahaan

Mengupdate Profil Perusahaan: Admin dapat mengupdate informasi perusahaan, seperti nama, deskripsi, dan kontak.

8. Keamanan dan Privasi

Enkripsi Password: Pastikan password pengguna dienkripsi sebelum disimpan.
Validasi Input: Cegah SQL Injection dan serangan keamanan lainnya dengan validasi input yang tepat.
Hak Akses: Batasi akses berdasarkan peran pengguna (customer, admin).

9. Reporting dan Analisis

Laporan Pemesanan: Admin dapat melihat statistik pemesanan, pendapatan, dan ulasan.
Analisis Pengguna: Memantau perilaku pengguna untuk meningkatkan layanan.

10. Integrasi dengan Pihak Ketiga

Integrasi Pembayaran: Gunakan API pembayaran untuk memproses transaksi (misal: Stripe, PayPal).
Integrasi Email: Gunakan layanan email untuk mengirim notifikasi dan konfirmasi.

=====================================================================================